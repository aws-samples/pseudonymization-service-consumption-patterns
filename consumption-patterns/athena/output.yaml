AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Specification template describing your function.
Parameters:
  EPURL:
    Type: String
Resources:
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.amazonaws.samples.PseudonymizerUDF
      Runtime: java11
      CodeUri: s3://demo-bucket-1-tv09/36582cf18ce602eff975ad89f67139f2
      Description: Lambda function that works as UDF for Athena query
      MemorySize: 1024
      Timeout: 60
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Environment:
        Variables:
          SECRET_NAME:
            Fn::Sub: EncryptionKeys-${AWS::StackName}
          SECRET_REGION:
            Fn::Sub: ${AWS::Region}
          EP_URL:
            Ref: EPURL
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - Ref: LambdaCWPermissionsPolicy
      - Ref: LambdaEncryptionPermissionsPolicy
  LambdaCWPermissionsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          - logs:DescribeLogStreams
          - logs:GetLogEvents
          - logs:CreateLogGroup
          Resource:
          - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
  LambdaEncryptionPermissionsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          - secretsmanager:DescribeSecret
          - secretsmanager:ListSecretVersionIds
          - secretsmanager:TagResource
          - secretsmanager:UntagResource
          Resource:
            Ref: EncryptionKeys
        - Effect: Allow
          Action:
          - kms:DescribeKey
          - kms:Decrypt
          Resource:
            Fn::GetAtt:
            - KmsKeyId
            - Arn
  EncryptionKeys:
    Type: AWS::SecretsManager::Secret
    Properties:
      KmsKeyId:
        Ref: KmsKeyId
      Name:
        Fn::Sub: EncryptionKeys-${AWS::StackName}
  KmsKeyId:
    Type: AWS::KMS::Key
    Properties:
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: default
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS:
              Fn::Sub: arn:aws:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: '*'
      KeySpec: SYMMETRIC_DEFAULT
Outputs:
  LambdaArn:
    Value:
      Fn::GetAtt:
      - LambdaFunction
      - Arn
